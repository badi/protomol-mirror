#!/bin/sh

TOP=$(dirname $0)/..

addHeaderFilter() {
  for i in $TOP/protomol/$1/*.h; do
      NAME=$(basename $i .h)
      if [ "$NAME" == "*" ]; then continue; fi
      if [ "$SED" != "" ]; then SED+=";"; fi
      SED+="s/\"$NAME\.h\"/<protomol\/$1\/$NAME.h>/g"
      SED+=";s/<.*\/$NAME\.h>/<protomol\/$1\/$NAME.h>/g"
  done
}

addAllHeaderFilters() {
  for i in $(find $TOP/protomol -maxdepth 1 -mindepth 1 -type d); do
      NAME=$(basename $i)
      if [ "$NAME" == ".svn" ]; then continue; fi
      addHeaderFilter "$NAME"
  done
}

buildFilter() {
    for i in $(seq 0 $((${#FILTER[@]} / 2 - 1))); do
        search=${FILTER[$(($i * 2))]}
        replace=${FILTER[$(($i * 2 + 1))]}
        
        if [ "$SED" != "" ]; then
            SED+=";"
        fi
        SED+="s/$search/$replace/g"
    done
}

makeBackup() {
    C=0
    while true; do
        BACKUP="$1.$C.bak~"
        if [ ! -e "$BACKUP" ]; then break; fi
        C=$(($C + 1))
    done

    cp "$1" "$BACKUP"
}

cleanBackup() {
    diff "$1" "$BACKUP" 2>&1 >/dev/null
    if [ $? -eq 0 ]; then
        rm -f "$BACKUP"
    fi
}

addFilter() {
    FILTERS[${#FILTERS[@]}]="$1"
}

if [ "$1" == "" ]; then
   echo "Syntax $0 [OPTIONS] <file>..."
   echo "Options:"
   echo "  -f <filter file>        Add a filter file"
   echo "  -u                      Uncrustify"
   echo "  -h                      Filter header files"
   echo "  -t                      Print sed filter and exit"
   echo "  -d                      Add default filter"
   echo "  --fix-ending-namepace   "
   echo "  --clean-commas          "
   exit 1
fi

FILTERS=()
FILES=()
uncrustify=false
fixnamespace=false
cleancommas=false
headerfilter=false
testonly=false

while [ "$1" != "" ]; do
    case "$1" in
        "-f")
            shift
            addFilter "$1"
            ;;
        "-d") addFilter $(dirname $0)/DEFAULT_FILTER ;;
        "-u") uncrustify=true ;;
        "-h") headerfilter=true ;;
        "-t") testonly=true ;;
        "--fix-ending-namepace")
            uncrustify=true
            fixnamespace=true
            ;;
        "--clean-commas")
            uncrustify=true
            cleancommas=true
            ;;

        *) FILES[${#FILES[@]}]="$1" ;;
    esac

    shift
done

# Add default filter
#if [ ${#FILTERS[@]} -eq 0 ]; then
#    addFilter $(dirname $0)/DEFAULT_FILTER
#fi

SED=
for f in ${FILTERS[@]}; do
    if [ ! -e "$f" ]; then
        echo "Filter file '$f' does not exist"
        exit 1
    fi

    . "$f"

    if [ ${#FILTER[@]} -eq 0 ]; then
        echo "FILTER not set"
        exit 1
    fi

    buildFilter
done

if $headerfilter; then addAllHeaderFilters; fi

if [ ${#FILES[@]} -eq 0 ]; then
    echo "No files"
    exit 1
fi

if $testonly; then
    echo "$SED"
    exit 0
fi

for i  in "${FILES[@]}"; do
    if [ ! -e "$i" ]; then
        echo "'$i' does not exist"
        continue
    fi

    makeBackup "$i"

    echo $i
    sed "$SED" <"$BACKUP">"$i"

    cleanBackup "$i"

    if $fixnamespace; then
        makeBackup "$i"
        
        if [ $(tail -2 "$i" | grep '^}$' | wc -l) -eq 2 ]; then
            LEN=$(wc -l <"$i")

            head -$(($LEN - 1)) "$BACKUP" >"$i"
        fi

        cleanBackup "$i"
    fi

    if $cleancommas; then
        makeBackup "$i"

        awk '{if ($0 ~ /^.*,$/) printf($0); else print}' "$BACKUP" >"$i"

        cleanBackup "$i"
    fi

    if $uncrustify; then
        uncrustify --replace -q "$i"
    fi
done
